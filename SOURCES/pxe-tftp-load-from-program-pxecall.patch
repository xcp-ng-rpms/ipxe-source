[CP-4565] [CA-72764] fix loading tftp file from pxe bios call (fix CA Boot Server)

If filename contained '#' tftp does not load correctly file cause url was not
quoted correctly.

diff --git a/src/arch/i386/interface/pxe/pxe_tftp.c b/src/arch/i386/interface/pxe/pxe_tftp.c
index aab376e..ff1dc23 100644
--- a/src/arch/i386/interface/pxe/pxe_tftp.c
+++ b/src/arch/i386/interface/pxe/pxe_tftp.c
@@ -31,6 +31,8 @@ FILE_LICENCE ( GPL2_OR_LATER );
 #include <byteswap.h>
 #include <ipxe/uaccess.h>
 #include <ipxe/in.h>
+#include <ipxe/uri.h>
+#include <ipxe/vsprintf.h>
 #include <ipxe/tftp.h>
 #include <ipxe/iobuf.h>
 #include <ipxe/xfer.h>
@@ -161,6 +163,7 @@ static int pxe_tftp_open ( uint32_t ipaddress, unsigned int port,
 			   const unsigned char *filename, size_t blksize,
 			   int sizeonly ) {
 	char uri_string[PXE_TFTP_URI_LEN];
+	ssize_t len;
 	struct in_addr address;
 	int rc;
 
@@ -175,11 +178,13 @@ static int pxe_tftp_open ( uint32_t ipaddress, unsigned int port,
 		port = htons ( TFTP_PORT );
 	if ( blksize < TFTP_DEFAULT_BLKSIZE )
 		blksize = TFTP_DEFAULT_BLKSIZE;
-	snprintf ( uri_string, sizeof ( uri_string ),
-		   "tftp%s://%s:%d%s%s?blksize=%zd",
+	len = ssnprintf ( uri_string, sizeof ( uri_string ),
+		   "tftp%s://%s:%d%s",
 		   sizeonly ? "size" : "",
 		   inet_ntoa ( address ), ntohs ( port ),
-		   ( ( filename[0] == '/' ) ? "" : "/" ), filename, blksize );
+		   ( ( filename[0] == '/' ) ? "" : "/" ));
+	len += uri_encode( (const char *) filename, uri_string + len, sizeof ( uri_string ) - len, URI_PATH);
+	ssnprintf(uri_string + len, sizeof ( uri_string ) - len, "?blksize=%zd", blksize );
 	DBG ( " %s", uri_string );
 
 	/* Open PXE TFTP connection */
diff --git a/src/usr/autoboot.c b/src/usr/autoboot.c
index 0587f20..060001e 100644
--- a/src/usr/autoboot.c
+++ b/src/usr/autoboot.c
@@ -72,9 +72,10 @@ static struct net_device * find_boot_netdev ( void ) {
  */
 static struct uri * parse_next_server_and_filename ( struct in_addr next_server,
 						     const char *filename ) {
-	char buf[ 23 /* "tftp://xxx.xxx.xxx.xxx/" */ + strlen ( filename )
+	char buf[ 23 /* "tftp://xxx.xxx.xxx.xxx/" */ + 3 * strlen ( filename )
 		  + 1 /* NUL */ ];
 	struct uri *uri;
+	int len;
 
 	/* Parse filename */
 	uri = parse_uri ( filename );
@@ -89,8 +90,9 @@ static struct uri * parse_next_server_and_filename ( struct in_addr next_server,
 	 */
 	if ( next_server.s_addr && filename[0] && ! uri_is_absolute ( uri ) ) {
 		uri_put ( uri );
-		snprintf ( buf, sizeof ( buf ), "tftp://%s/%s",
-			   inet_ntoa ( next_server ), filename );
+		len = snprintf ( buf, sizeof ( buf ), "tftp://%s%s",
+			   inet_ntoa ( next_server ), ( filename[0] == '/' ) ? "" : "/" );
+		uri_encode( filename, buf + len, sizeof ( buf ) - len, URI_PATH);
 		uri = parse_uri ( buf );
 		if ( ! uri )
 			return NULL;
